<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

<section>
    <div class="x-p-[16px] x-flex x-flex-col-reverse md:x-flex-row-reverse x-gap-[8px] md:x-gap-[20px] md:x-max-w-[1440px] md:x-mx-auto">
        <div class="x-bg-[#F9F9F8] x-p-[16px] md:x-w-full">
            <div class="dashboard view x-hidden">
                <div>
                    <div class="x-pb-[8px]">
                        Hello 
                        {% if customer %}
                            <span class="x-font-semibold">{{ customer.first_name }} {{ customer.last_name }}</span>
                            (not {{ customer.first_name }}? 
                            <a href="/account/logout" 
                               class="x-text-[#9E0B0F] x-underline x-underline-offset-[2px] x-font-semibold">Log out</a>)
                        {% endif %}
                    </div>
                    <div>
                        From your account dashboard you can view <a href="/account?view=orders"
                            class="x-text-[#9E0B0F] x-underline x-underline-offset-[2px] x-font-semibold">Recent
                            Orders</a>, manage your <a href="/account?view=addresses"
                            class="x-text-[#9E0B0F] x-underline x-underline-offset-[2px] x-font-semibold">Shipping
                            Address</a>, and edit your <a href="/account?view=account"
                            class="x-text-[#9E0B0F] x-underline x-underline-offset-[2px] x-font-semibold">Password and
                            Account details</a>
                    </div>
                </div>
            </div>            
            <div class="orders view x-hidden">
                <div class="x-flex x-flex-col x-gap-[16px]">
                    <div class="x-flex x-justify-between md:x-justify-start md:x-gap-[24px]">
                        <button class="company-orders sub-view-button x-text-[16px] md:x-text-[20px]">Company Orders</button>
                        <button class="my-orders sub-view-button x-text-[16px] md:x-text-[20px]">My Orders</button>
                        <button class="recurring-orders sub-view-button x-text-[16px] md:x-text-[20px]">Recurring Orders</button>
                    </div>
                    <div>
                        <div class="company-orders sub-view x-hidden">
                            <div class="x-overflow-x-auto x-max-w-full">
                                <table class="x-w-full">
                                    <thead>
                                        <tr>
                                            <th class="x-sticky x-left-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-right">Order #</div>
                                            </th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Ordered by</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Status</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">PO</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Total</th>
                                            <th class="x-sticky x-right-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-left">Actions</div>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Company Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Shipped</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258893</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$110.00 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>

                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Company Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Shipped</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258893</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$110.00 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>
    
                                        <!-- Additional rows as needed -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="my-orders sub-view">
                            <div class="x-overflow-x-auto x-max-w-full">
                                <table class="x-w-full">
                                    <thead>
                                        <tr>
                                            <th class="x-sticky x-left-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-right">Order #</div>
                                            </th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Ordered by</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Status</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">PO</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Total</th>
                                            <th class="x-sticky x-right-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-left">Actions</div>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">My Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Cancelled</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258894</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$36.50 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>
    
                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">My Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Cancelled</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258894</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$36.50 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>
    
                                        <!-- Additional rows as needed -->
                                    </tbody>
                                </table>
                            </div>  
                        </div>
                        <div class="recurring-orders sub-view x-hidden">
                            <div class="x-overflow-x-auto x-max-w-full">
                                <table class="x-w-full">
                                    <thead>
                                        <tr>
                                            <th class="x-sticky x-left-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-right">Order #</div>
                                            </th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Ordered by</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Status</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">PO</th>
                                            <th class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap">Total</th>
                                            <th class="x-sticky x-right-0 x-z-[1] x-p-0">
                                                <div class="x-bg-white x-p-3 x-border-b x-border-gray-300 x-text-nowrap shadow-left">Actions</div>
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        
                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Recurring Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Shipped</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258893</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$110.00 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>
    
                                        <tr class="md:x-text-center">
                                            <td class="x-sticky x-left-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-text-center x-h-[10px]">
                                                <div class="x-h-full x-w-full x-flex x-items-center x-justify-center shadow-right">
                                                    20156
                                                </div>
                                            </td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Recurring Orders</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">Shipped</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">258893</td>
                                            <td class="x-p-3 x-border-b x-border-gray-300 x-text-nowrap md:x-text-wrap">$110.00 for 3 items</td>
                                            <td class="x-sticky x-right-0 x-bg-white x-p-0 x-border-b x-border-gray-300 x-h-[10px]">
                                                <div class="x-flex x-flex-col lg:x-flex-row x-gap-[8px] x-p-[8px] x-h-full x-w-full x-items-center x-justify-center shadow-left">
                                                    <button class="x-bg-red-800 x-text-white x-py-1 x-px-3 x-rounded x-w-full">VIEW</button>
                                                    <button class="x-bg-yellow-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">REORDER</button>
                                                    <button class="x-bg-gray-500 x-text-white x-py-1 x-px-3 x-rounded x-w-full">TRACK</button>
                                                </div>
                                            </td>
                                        </tr>
    
                                        <!-- Additional rows as needed -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="addresses view x-hidden x-h-full">
                <div class="x-flex x-flex-col x-gap-[16px] x-h-full">
                    <div>The following addresses will be used on the checkout page by default</div>
                    <div class="x-flex x-flex-col x-gap-[16px] x-flex-1">
                        <div class="x-text-[20px]">Shipping Address</div>
                        <div class="x-grid x-grid-cols-1 md:x-grid-cols-2 x-gap-[16px]" id="shipping-addresses">
                            <!-- Addresses will be dynamically inserted here -->
                        </div>
                        <div class="x-flex x-items-center x-gap-[4px] x-text-[#9e0b0f] x-mt-[8px]" id="add-new-address">
                            <i class='bx bx-plus'></i><div>Add New Address</div>
                        </div>
                    </div>
                </div>
            </div>
           <!-- Add New Address Modal -->
        <div id="add-address-modal" class="x-hidden x-fixed x-inset-0 x-items-center x-justify-center x-bg-gray-900 x-bg-opacity-50">
                <div class="x-bg-white x-p-[24px] x-rounded-md x-w-[400px] x-space-y-[16px]">
                    <div id="modal-title" class="x-text-[20px] x-font-semibold">

                    </div>
                    <form method="post" action="/account/addresses" id="add-new-address-form" class="x-space-y-[8px]">
                    <input type="hidden" name="form_type" value="new_address">
                    <input type="hidden" name="utf8" value="✓">
                    <input type="hidden" name="return_to" value="/account?view=addresses">

                    <input type="text" name="address[first_name]" id="new-first-name" class="x-border x-w-full x-p-[8px]" placeholder="First Name" value="{{ customer.first_name }}" required>
                    <input type="text" name="address[last_name]" id="new-last-name" class="x-border x-w-full x-p-[8px]" placeholder="Last Name" value="{{ customer.last_name }}" required>
                    <input type="text" name="address[company]" id="new-company" class="x-border x-w-full x-p-[8px]" placeholder="Company (Optional)">
                    <input type="text" name="address[address1]" id="new-address1" class="x-border x-w-full x-p-[8px]" placeholder="Address Line 1" required>
                    <input type="text" name="address[city]" id="new-city" class="x-border x-w-full x-p-[8px]" placeholder="City" required>
                    <input type="text" name="address[province]" id="new-province" class="x-border x-w-full x-p-[8px]" placeholder="State/Province" required>
                    <input type="text" name="address[zip]" id="new-zip" class="x-border x-w-full x-p-[8px]" placeholder="Zip Code" required>
                    <input type="text" name="address[country]" id="new-country" class="x-border x-w-full x-p-[8px]" placeholder="Country" required>

                    <div class="x-flex x-justify-end x-gap-[8px]">
                        <button type="button" id="cancel-add-address" class="x-border x-p-[8px] x-rounded-md" onclick="toggleModalVisibility(false)">Cancel</button>
                        <button type="submit" class="x-bg-[#9e0b0f] x-text-white x-p-[8px] x-rounded-md">Save</button>
                    </div>
                </form>
                </div>
            </div>
            <!-- Edit Address Modal -->
            <div id="edit-address-modal" class="x-hidden x-fixed x-inset-0 x-items-center x-justify-center x-bg-gray-900 x-bg-opacity-50">
                <div class="x-bg-white x-p-[24px] x-rounded-md x-w-[400px] x-space-y-[16px]">
                    <div id="modal-title" class="x-text-[20px] x-font-semibold">Edit Address</div>
                    <form method="post" action="/account/addresses" id="edit-address-form" class="x-space-y-[8px]">
                        <input type="hidden" name="form_type" value="edit_address">
                        <input type="hidden" name="utf8" value="✓">
                        <input type="hidden" name="return_to" value="/account?view=addresses">

                        <input type="text" name="address[first_name]" id="edit-first-name" class="x-border x-w-full x-p-[8px]" placeholder="First Name" required>
                        <input type="text" name="address[last_name]" id="edit-last-name" class="x-border x-w-full x-p-[8px]" placeholder="Last Name" required>
                        <input type="text" name="address[company]" id="edit-company" class="x-border x-w-full x-p-[8px]" placeholder="Company (Optional)">
                        <input type="text" name="address[address1]" id="edit-address1" class="x-border x-w-full x-p-[8px]" placeholder="Address Line 1" required>
                        <input type="text" name="address[city]" id="edit-city" class="x-border x-w-full x-p-[8px]" placeholder="City" required>
                        <input type="text" name="address[province]" id="edit-province" class="x-border x-w-full x-p-[8px]" placeholder="State/Province" required>
                        <input type="text" name="address[zip]" id="edit-zip" class="x-border x-w-full x-p-[8px]" placeholder="Zip Code" required>
                        <input type="text" name="address[country]" id="edit-country" class="x-border x-w-full x-p-[8px]" placeholder="Country" required>

                        <div class="x-flex x-justify-end x-gap-[8px]">
                            <button type="button" id="cancel-edit-address" class="x-border x-p-[8px] x-rounded-md">Cancel</button>
                            <button type="submit" id="save-edit-address" class="x-bg-[#9e0b0f] x-text-white x-p-[8px] x-rounded-md">Save</button>
                        </div>
                    </form>
                </div>
            </div>
            <div class="account view x-hidden">
                <div class="x-space-y-[24px]">
                    <div class="x-space-y-[8px]">
                        <div class="x-grid x-grid-cols-1 md:x-grid-cols-2 x-gap-[8px]">
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="first_name" class="x-text-[14]">First Name</label>
                                <input type="text" id="first_name" name="first_name" value="Sam" class="x-border x-p-[8px] x-rounded-md x-text-[14px]">
                            </div>
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="last_name" class="x-text-[14]">Last Name</label>
                                <input type="text" id="last_name" name="last_name" value="Smith" class="x-border x-p-[8px] x-rounded-md x-text-[14px]">
                            </div>
                        </div>
                        <div class="x-flex x-flex-col x-gap-[4px]">
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="display_name" class="x-text-[14]">Display Name</label>
                                <input type="text" value="Sam Smith" name="display_name" class="x-border x-p-[8px]">
                            </div>
                            <div class="x-italic x-text-[14px] x-text-gray-400 x-mt-[4px]">
                                This is how your name will be displayed in the account section and reviews
                            </div>
                        </div>
                    </div>
                    <div class="x-space-y-[12px]">
                        <div class="x-text-[18px]">
                            Password Change
                        </div>
                        <div class="x-space-y-[8px]">
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="current_password" class="x-text-[14]">Current Password</label>
                                <input type="password" name="current_password" value="qwerty12345" class="x-border x-p-[8px] x-rounded-md x-text-[14px]">
                            </div>
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="new_password" class="x-text-[14]">New Password</label>
                                <input type="password" name="new_password" value="" class="x-border x-p-[8px] x-rounded-md x-text-[14px]">
                            </div>
                            <div class="x-flex x-flex-col x-gap-[4px]">
                                <label for="confirm_password" class="x-text-[14]">Confirm Password</label>
                                <input type="password" name="confirm_password" value="" class="x-border x-p-[8px] x-rounded-md x-text-[14px]">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="saved view x-hidden">
                <div>
                    Too discuss...
                </div>
            </div>
            <div class="drafts view x-hidden">
                <div class="draft-orders-list">
                    {% if customer.drafts.size > 0 %}
                        {% for draft in customer.drafts %}
                            <div class="collapsable">
                                <input type="checkbox" class="x-hidden">
                                <button class="collapse-trigger x-flex x-flex-row x-justify-between x-p-[16px] x-w-full x-bg-[#404042]">
                                    <div class="x-text-white">Order #{{ draft.id }} ({{ draft.line_items.size }} items)</div>
                                    <div class="x-flex x-items-center x-justify-center x-w-[20px] x-h-[20px]">
                                        <div class="collapse-feedback x-h-[16px] x-w-[2px] x-bg-white x-absolute x-transition-all x-duration-500">
                                            &nbsp;
                                        </div>
                                        <div class="x-h-[2px] x-w-[16px] x-bg-white x-absolute">&nbsp;</div>
                                    </div>
                                </button>
                                <div class="collapse-content x-transition-all x-duration-500 x-bg-white" style="height: 0px; overflow: hidden;">
                                    <div class="x-p-[16px] x-flex x-flex-col x-gap-[24px]">
                                        <!-- Actions -->
                                        <div class="x-flex x-justify-end x-gap-[12px]">
                                            <button class="x-p-[8px] delete-draft-order" data-id="{{ draft.id }}">
                                                Delete Order
                                            </button>
                                            <button class="x-p-[8px] x-px-[24px] x-text-white x-bg-[#951828] add-to-cart" data-id="{{ draft.id }}">
                                                Add All to Cart
                                            </button>
                                        </div>
                                        
                                        <!-- Items -->
                                        <div class="x-flex x-flex-col x-gap-[16px]">
                                            {% for item in draft.line_items %}
                                                <div class="x-space-y-[14px]">
                                                    <div class="x-text-[#951828] x-text-[24px]">{{ item.product.title }}</div>
                                                    <table class="x-w-full table-alternating-rows">
                                                        <thead>
                                                            <tr class="x-text-white x-bg-[#404042]">
                                                                <th class="x-text-start x-p-[8px] x-font-normal">Item Code</th>
                                                                <th class="x-p-[8px] x-font-normal">Description</th>
                                                                <th class="x-p-[8px] x-font-normal">Cut Size</th>
                                                                <th class="x-p-[8px] x-font-normal">Packing</th>
                                                                <th class="x-p-[8px] x-font-normal">Qty</th>
                                                                <th class="x-p-[8px] x-font-normal">Price</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody class="x-text-center">
                                                            <tr class="x-border-b-[1px] x-border-gray-400">
                                                                <td class="x-text-start x-p-[8px]">{{ item.sku }}</td>
                                                                <td class="x-p-[8px]">{{ item.variant.metafields.custom.description }}</td>
                                                                <td class="x-p-[8px]">{{ item.variant.metafields.custom.cut_size }}</td>
                                                                <td class="x-p-[8px]">{{ item.variant.metafields.custom.packing }}</td>
                                                                <td class="x-p-[8px]">{{ item.quantity }}</td>
                                                                <td class="x-p-[8px]">{{ item.line_price | money }}</td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            {% endfor %}
                                        </div>
                    
                                        <!-- Total -->
                                        <div class="x-w-full x-flex x-justify-between x-p-[8px] x-text-[#951828] x-border-[#951828] x-border-[2px] x-bg-[#F5DFE2]">
                                            <div class="x-text-[16px]">Total: </div>
                                            <div class="x-text-[16px]">{{ draft.total_price | money }}</div>
                                        </div>
                    
                                        <!-- Checkout -->
                                        <div class="x-w-full x-flex x-justify-end">
                                            <button class="x-bg-[#951828] x-text-white x-p-[8px] x-px-[24px] x-text-[16px] checkout-draft-order" data-id="{{ draft.id }}">
                                                Checkout
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        {% endfor %}
                    {% else %}
                        <p>No draft orders available.</p>
                    {% endif %}
                </div>
            </div>
            
            
        </div>
        <div class="x-flex x-flex-row md:x-flex-col x-gap-[8px] md:x-w-[420px] md:x-gap-[12px] md:x-min-h-[480px] md:x-max-h-[480px]">
            <button
                class="dashboard nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28px] lg:x-text-[28px] bx bxs-dashboard'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Dashboard
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
            </button>


            <button
                class="orders nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28px] lg:x-text-[28px] bx bxs-shopping-bag'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Orders
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
            </button>

            <button
                class="addresses nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28px] lg:x-text-[28px] bx bxs-map-pin'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Addresses
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
            </button>

            <button
                class="account nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28 lg:x-text-[32px]px] bx bxs-user'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Account Details
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
            </button>

            <button
                class="saved nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28p lg:x-text-[32px]x] bx bxs-heart'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Saved for Later
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
            </button>

            <button
                class="drafts nav-button x-flex-1 x-aspect-square md:x-aspect-auto md:x-px-[18px] x-flex x-items-center x-justify-center md:x-justify-between x-transition-colors x-duration-150 x-rounded-md">
                <div class="x-flex x-gap-[18px] x-items-center">
                    <i class='x-text-[24px] md:x-text-[28px] lg:x-text-[28px] bx bxs-folder-open'></i>
                    <div class="x-text-[18px] x-hidden md:x-block x-text-[#4D4D4D]">
                        Draft Orders
                    </div>
                </div>
                <div class="x-hidden md:x-flex chevron-wrapper x-items-center">
                    <i class='x-text-[28px] lg:x-text-[28px] bx bx-chevron-left'></i>
                </div>
                <div class="x-hidden x-underline-offset-[2px]">
                </div>
            </button>
        </div>
    </div>
</section>

<style>
    .shadow-right {
        box-shadow: 5px 0 8px -2px rgba(0, 0, 0, 0.15);
    }

    .shadow-left {
        box-shadow: -5px 0 8px -2px rgba(0, 0, 0, 0.15);
    }

    .table-alternating-rows tbody tr:nth-child(even) {
        background-color: #F0EFEF;
    }

    .loading-spinner {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 20px;
    }
    .spinner {
        width: 30px;
        height: 30px;
        border: 4px solid #ddd;
        border-top: 4px solid #951828;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    @keyframes spin {
        from {
            transform: rotate(0deg);
        }
        to {
            transform: rotate(360deg);
        }
    }

</style>

<script>
    const customerId = "{{ customer.id }}";
    document.addEventListener('DOMContentLoaded', function () {
        initalizeMainView();
        initializeOrdersView();
        initializeCollapses();
        loadShippingAddresses();
        initializeAddAddressFunctionality();
        populateDraftOrders();
        const saveAddButton = document.getElementById('save-add-address');
        const saveEditButton = document.getElementById('save-edit-address');

        if (saveAddButton) {
            saveAddButton.addEventListener('click', async function (event) {
                event.preventDefault();
                try {
                    const form = document.getElementById('add-new-address-form');
                    const formData = new FormData(form);
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                    });
                    if (response.ok) {
                        alert('Address added successfully!');
                        window.location.reload();
                    } else {
                        alert('Failed to add address.');
                    }
                } catch (error) {
                    console.error('Error adding address:', error);
                }
            });
        }

        if (saveEditButton) {
            saveEditButton.addEventListener('click', async function (event) {
                event.preventDefault();

                try {
                    const editModal = document.getElementById('edit-address-modal');
                    const addressId = editModal.getAttribute('data-edit-id');
                    if (!addressId) {
                        alert('Address ID is missing.');
                        return;
                    }

                    // Get form data
                    const form = document.getElementById('edit-address-form');
                    const formData = new URLSearchParams(new FormData(form));
                    formData.append('_method', 'put'); // Add method override

                    // Send POST request with `_method=put`
                    const response = await fetch(`/account/addresses/${addressId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                        body: formData,
                    });

                    if (response.ok) {
                        window.location.reload(); // Reload to see updates
                    } else {
                        const errorText = await response.text();
                        console.error('Edit error:', errorText);
                        alert('Failed to update address.');
                    }
                } catch (error) {
                    console.error('Error editing address:', error);
                    alert('An error occurred while editing the address.');
                }
            });
        }
    });

    //DRAFT ORDERS TAB
    async function fetchData(query) {
        try {
            const response = await fetch("https://eaa0-120-72-18-186.ngrok-free.app/graphql", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({ query: query }),
            });
            const data = await response.json();
            return data;
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    }

    async function populateDraftOrders() {
        const currentUserId = `gid://shopify/Customer/${customerId}`;
        const query = `
            query {
                draftOrders {
                    id
                    createdAt
                    customerId
                    lineItems {
                        title
                        quantity
                        price
                        variant_title
                    }
                    metafields {
                        id
                        namespace
                        key
                        value
                    }
                }
            }
        `;
        const draftOrdersList = document.querySelector(".draft-orders-list");
        
        // Add loading animation
        const loadingSpinner = document.createElement("div");
        loadingSpinner.className = "loading-spinner";
        loadingSpinner.innerHTML = `
            <div class="spinner">

            </div>
        `;
        draftOrdersList.innerHTML = ""; // Clear content
        draftOrdersList.appendChild(loadingSpinner);

        try {
            const data = await fetchData(query);
            console.log("Draft Orders API Response:", data);

            if (data && data.data && data.data.draftOrders) {
                const orders = data.data.draftOrders.filter(order => order.customerId === currentUserId).reverse();
                console.log("Filtered Orders:", orders);

                const filteredOrders = [];
                for (const order of orders) {
                    const orderId = order.id.split('/').pop();

                    // Check if the order has the "Placed" tag
                    const tagQuery = `
                        query {
                            getDraftOrderTags(draftOrderId: "${orderId}") {
                                tag
                            }
                        }
                    `;
                    const tagData = await fetchData(tagQuery);
                    const hasPlacedTag = tagData.data?.getDraftOrderTags?.some(tag => tag.tag === "Placed");

                    if (hasPlacedTag) {
                        console.log(`Skipping order ${orderId} as it has the "Placed" tag.`);
                        continue;
                    }

                    filteredOrders.push(order);
                }

                draftOrdersList.innerHTML = ""; // Clear loading spinner
                if (filteredOrders.length > 0) {
                    for (const order of filteredOrders) {
                        const orderId = order.id.split('/').pop();
                        const formattedDate = new Date(order.createdAt).toLocaleDateString();

                        const collapsableDiv = document.createElement("div");
                        collapsableDiv.classList.add("collapsable");

                        collapsableDiv.innerHTML = `
                            <input type="checkbox" class="x-hidden">
                            <button class="collapse-trigger x-flex x-flex-row x-justify-between x-p-[16px] x-w-full x-bg-[#404042]">
                                <div class="x-text-white">Order #${orderId} (${order.lineItems.length} items) - ${formattedDate}</div>
                                <div class="x-flex x-items-center x-justify-center x-w-[20px] x-h-[20px]">
                                    <div class="collapse-feedback x-h-[16px] x-w-[2px] x-bg-white x-absolute x-transition-all x-duration-500">
                                    &nbsp;
                                    </div>
                                    <div class="x-h-[2px] x-w-[16px] x-bg-white x-absolute">
                                    </div>
                                </div>
                            </button>
                            <div class="collapse-content x-transition-all x-duration-500 x-bg-white" style="height: 0px; overflow: hidden;">
                                <div class="x-p-[16px] x-flex x-flex-col x-gap-[24px]">
                                    <div class="x-flex x-justify-end x-gap-[12px]">
                                        <button class="x-p-[8px] delete-draft-order" data-id="${order.id}">
                                            Delete Order
                                        </button>
                                        <button class="x-p-[8px] x-px-[24px] x-text-white x-bg-[#951828] add-to-cart" data-id="${order.id}">
                                            Add All to Cart
                                        </button>
                                    </div>
                                    <div class="x-flex x-flex-col x-gap-[16px]">
                                        ${order.lineItems.map(item => `
                                            <div class="x-space-y-[14px]">
                                                <div class="x-text-[#951828] x-text-[24px]">${item.title}</div>
                                                <table class="x-w-full table-alternating-rows">
                                                    <thead>
                                                        <tr class="x-text-white x-bg-[#404042]">
                                                            <th class="x-text-start x-p-[8px] x-font-normal x-w-[20%]">Item Code</th>
                                                            <th class="x-p-[8px] x-font-normal x-w-[40%]">Description</th>
                                                            <th class="x-p-[8px] x-font-normal x-w-[20%]">Variant</th>
                                                            <th class="x-p-[8px] x-font-normal x-w-[10%]">Qty</th>
                                                            <th class="x-p-[8px] x-font-normal x-w-[10%]">Price</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="x-text-center">
                                                        <tr class="x-border-b-[1px] x-border-gray-400">
                                                            <td class="x-text-start x-p-[8px]">${item.variant?.id.split('/').pop() || "N/A"}</td>
                                                            <td class="x-p-[8px]">${item.title}</td>
                                                            <td class="x-p-[8px]">${item.variant_title || "N/A"}</td>
                                                            <td class="x-p-[8px]">${item.quantity}</td>
                                                            <td class="x-p-[8px]">$${item.price}</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        `).join("")}
                                    </div>
                                    <div class="x-w-full x-flex x-justify-between x-p-[8px] x-text-[#951828] x-border-[#951828] x-border-[2px] x-bg-[#F5DFE2]">
                                        <div class="x-text-[16px]">Total: </div>
                                        <div class="x-text-[16px]">$${order.lineItems.reduce((sum, item) => sum + item.price * item.quantity, 0)}</div>
                                    </div>
                                    <div class="x-w-full x-flex x-justify-end">
                                        <button class="x-bg-[#951828] x-text-white x-p-[8px] x-px-[24px] x-text-[16px] checkout-draft-order" data-id="${order.id}">
                                            Checkout
                                        </button>
                                    </div>
                                </div>
                            </div>
                        `;
                        draftOrdersList.appendChild(collapsableDiv);
                    }
                    initializeCollapses();
                } else {
                    draftOrdersList.innerHTML = "<p>No draft orders available.</p>";
                }
            } else {
                draftOrdersList.innerHTML = "<p>Failed to fetch draft orders.</p>";
            }
        } catch (error) {
            console.error("Error fetching draft orders:", error);
            draftOrdersList.innerHTML = "<p>An error occurred while fetching draft orders.</p>";
        }
    }
    
    function initializeCollapses() {
        $('.collapse-trigger').click(function () {
            let collapseContent = $(this).closest('.collapsable').find('.collapse-content');
            let collapseCheckbox = $(this).closest('.collapsable').find('input[type="checkbox"]');
            let collapseFeedback = $(this).find('.collapse-feedback');

            $('.collapse-content').not(collapseContent).css({ 'height': '0px' });
            $('.collapsable input[type="checkbox"]').not(collapseCheckbox).prop('checked', false);
            $('.collapse-feedback').not(collapseFeedback).css({ transform: 'rotate(0deg)' });

            if (collapseCheckbox.prop('checked')) {
                collapseContent.css({ 'height': '0px' });
                collapseCheckbox.prop('checked', false);
                collapseFeedback.css({ transform: 'rotate(0deg)' });
            } else {
                collapseContent.css({ 'height': `${collapseContent[0].scrollHeight}px` });
                collapseCheckbox.prop('checked', true);
                collapseFeedback.css({ transform: 'rotate(90deg)' });
            }
        });
    }

    // ADDRESSES TAB     
    function toggleModalVisibility(modal, show) {
        if (!modal) {
            console.error('Modal element not found');
            return;
        }

        if (show) {
            modal.classList.remove('x-hidden');
            modal.classList.add('x-flex');
        } else {
            modal.classList.remove('x-flex');
            modal.classList.add('x-hidden');
            modal.removeAttribute('data-edit-id');
        }
    }

    function initializeAddAddressFunctionality() {
        const addAddressButton = document.getElementById('add-new-address');
        const addAddressModal = document.getElementById('add-address-modal');
        const cancelAddAddressButton = document.getElementById('cancel-add-address');

        if (addAddressButton) {
            addAddressButton.addEventListener('click', function () {
                // Clear modal fields for new address
                document.getElementById('new-first-name').value = '';
                document.getElementById('new-last-name').value = '';
                document.getElementById('new-company').value = '';
                document.getElementById('new-address1').value = '';
                document.getElementById('new-city').value = '';
                document.getElementById('new-province').value = '';
                document.getElementById('new-zip').value = '';
                document.getElementById('new-country').value = '';

                // Show the add address modal
                toggleModalVisibility(addAddressModal, true);
            });
        }

        if (cancelAddAddressButton) {
            cancelAddAddressButton.addEventListener('click', function () {
                toggleModalVisibility(addAddressModal, false);
            });
        }
    }

    function openEditAddressModal(address) {
        const editAddressModal = document.getElementById('edit-address-modal');
        if (!editAddressModal) {
            console.error('Edit Address Modal element not found');
            return;
        }

        // Populate modal fields with address data
        document.getElementById('edit-first-name').value = address.first_name || '';
        document.getElementById('edit-last-name').value = address.last_name || '';
        document.getElementById('edit-company').value = address.company || '';
        document.getElementById('edit-address1').value = address.address1 || '';
        document.getElementById('edit-city').value = address.city || '';
        document.getElementById('edit-province').value = address.province || '';
        document.getElementById('edit-zip').value = address.zip || '';
        document.getElementById('edit-country').value = address.country || '';

        // Set the address ID for editing
        editAddressModal.setAttribute('data-edit-id', address.id);

        // Show the edit address modal
        toggleModalVisibility(editAddressModal, true);
    }

    function updateModalTitle(isEditMode) {
        const modalTitle = document.getElementById('modal-title');
        if (modalTitle) {
            modalTitle.innerText = isEditMode ? 'Edit Address' : 'Add New Address';
        } else {
            console.warn('Modal title element not found');
        }
    }

    function loadShippingAddresses() {
        const addresses = {{ customer.addresses | json }}; // Populate using Shopify Liquid
        const addressContainer = document.getElementById('shipping-addresses');
        addressContainer.innerHTML = '';

        if (addresses.length === 0) {
            addressContainer.innerHTML = '<div>No addresses found. Please add a new address.</div>';
            return;
        }

        addresses.forEach((address) => {
            const addressHTML = `
                <div class="x-space-y-[8px]">
                    <div class="x-border x-p-[16px]">
                        <div>${address.first_name || ''} ${address.last_name || ''}</div>
                        <div>${address.company || ''}</div>
                        <div>${address.address1 || ''}</div>
                        <div>${address.city || ''}, ${address.province || ''} ${address.zip || ''}</div>
                        <div>${address.country || ''}</div>
                    </div>
                    <div class="x-flex x-flex-row x-gap-[8px]">
                        <button class="x-flex-1 x-border x-p-[8px] x-bg-[#0b0f9e] x-text-white x-rounded-md edit-address" data-id="${address.id}">Edit</button>
                        <button class="x-flex-1 x-border x-p-[8px] x-bg-[#9e0b0f] x-text-white x-rounded-md delete-address" data-id="${address.id}">Delete</button>
                    </div>
                </div>
            `;
            addressContainer.insertAdjacentHTML('beforeend', addressHTML);
        });

        const editButtons = document.querySelectorAll('.edit-address');
        editButtons.forEach((button) => {
            button.addEventListener('click', function () {
                const addressId = parseInt(this.getAttribute('data-id'), 10);
                const address = addresses.find((addr) => addr.id === addressId);
                if (address) {
                    openEditAddressModal(address);
                } else {
                    console.error(`Address with ID ${addressId} not found`);
                }
            });
        });

        const deleteButtons = document.querySelectorAll('.delete-address');
        deleteButtons.forEach((button) => {
            button.addEventListener('click', function () {
                const addressId = this.getAttribute('data-id');
                deleteAddress(addressId);
            });
        });
    }

    async function deleteAddress(addressId) {
        if (!confirm('Are you sure you want to delete this address?')) return;

        try {
            const response = await fetch(`/account/addresses/${addressId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: new URLSearchParams({ _method: 'delete' }),
            });

            if (response.ok) {
                alert('Address deleted successfully!');
                window.location.reload();
            } else {
                alert('Failed to delete address.');
            }
        } catch (error) {
            console.error('Error deleting address:', error);
        }
    }


    // ORDERS TAB                
    function initializeOrdersView() {
        const urlParams = new URLSearchParams(window.location.search);
        const initialView = urlParams.get('sub-view') || 'company-orders';
        updateSubView(initialView);

        $('.sub-view-button').click(function () {
            const view = $(this).attr('class').split(' ')[0];
            updateSubView(view);
        });
    }

    function clearSubViewButtonStyles() {
        $('.sub-view-button').removeClass('x-underline');
    }

    function updateSubView(view) {
        clearSubViewButtonStyles();
        $(`.${view}.sub-view-button`).addClass('x-underline x-underline-offset-[8px] x-decoration-[#9E0B0F]');
        $('.sub-view').addClass('x-hidden');
        $(`.${view}.sub-view`).removeClass('x-hidden');
    }

    function initalizeMainView() {
        const urlParams = new URLSearchParams(window.location.search);
        const views = ['dashboard', 'orders', 'addresses', 'account', 'saved', 'drafts'];
        const initialView = views.includes(urlParams.get('view')) ? urlParams.get('view') : 'dashboard';
        updateMainView(initialView);

        $('.nav-button').click(function () {
            const view = $(this).attr('class').split(' ')[0];
            updateMainView(view);
        });
    }

    function clearButtonStyles() {
        $('.nav-button').css({ 'background-color': '#F0EFEF', 'color': '#4D4D4D' });
        $('.chevron-wrapper').html('<i class="x-text-[32px] bx bx-chevron-right"></i>');
    }

    function updateMainView(view) {
        clearButtonStyles();
        $(`.${view}.nav-button`).css({ 'background-color': '#F5DFE2', 'color': '#951828' })
            .find('.chevron-wrapper').html('<i class="x-text-[32px] bx bx-chevron-left"></i>');
        $('.view').addClass('x-hidden');
        $(`.${view}.view`).removeClass('x-hidden');
        window.history.pushState({}, '', `?view=${view}`);
    }
</script>

