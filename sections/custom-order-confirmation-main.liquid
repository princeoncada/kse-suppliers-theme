<section class="order-confirmation-section">
    <div class="x-max-w-[1440px] x-mx-auto x-p-[16px] md:x-p-[30px]">
        <div class="x-bg-[#FFF6E6] x-flex x-flex-col x-gap-[48px] x-items-center x-justify-center x-text-center x-py-[64px] md:x-py-[80px] lg:x-py-[128px] x-px-[12px] x-text-[16px]">
            <!-- Spinner Container -->
            <div id="spinner-container">
                <div class="loading-spinner">
                    <div class="spinner">
                    </div>
                </div>
            </div>

            <!-- Success Confirmation Content -->
            <div id="confirmation-content" style="display: none;">
                <div><i class='bx bx-check-circle x-text-[#9E0B0F] x-text-[96px]'></i></div>
                <div class="x-text-[32px] md:x-text-[36px]">ORDER CONFIRMED!</div>
                <div>
                    Thank you for placing your order! We hope you enjoyed shopping with us. <br class="x-hidden md:x-block" />
                    We have sent you a confirmation email.
                </div>
                <div class="x-font-semibold">
                    Your order number is: <span id="order-number" class="x-text-[#9E0B0F]"></span>
                </div>
            </div>

            <!-- Failure Content -->
            <div id="failure-content" style="display: none;">
                <div><i class='bx bx-error-circle x-text-[#951828] x-text-[96px]'></i></div>
                <div class="x-text-[32px] md:x-text-[36px]">ORDER FAILED!</div>
                <div>
                    Something went wrong while processing your order. Please try again or view your drafts.
                </div>
            </div>

            <!-- Button -->
            <a id="action-button" style="display: none;" class="x-bg-[#9E0B0F] x-text-white x-text-[14px] md:x-text-[16px] x-p-[12px] md:x-p-[14px] x-px-[16px] md:x-px-[20px] x-uppercase">
                Browse more products
            </a>
        </div>
    </div>
</section>

<style>
    .loading-spinner {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #ddd;
        border-top: 4px solid #951828;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
</style>
<script>
document.addEventListener('DOMContentLoaded', function () {
    const params = new URLSearchParams(window.location.search);
    const draftOrderId = params.get('draftOrderId');
    const requestedShipping = params.get('requestedShipping') === 'true';
    const userId = {{customer.id}};
    const selectedAddress = {
        address1: params.get('address1') || '',
        city: params.get('city') || '',
        province: params.get('province') || '',
        country: params.get('country') || '',
        zip: params.get('zip') || ''
    };

    if (draftOrderId) {
        console.log("Processing Draft Order:", draftOrderId);

        const spinnerContainer = document.getElementById('spinner-container');
        const confirmationContent = document.getElementById('confirmation-content');
        const actionButton = document.getElementById('action-button');

        const tagMutation = `
            mutation {
                createDraftOrderTag(draftOrderId: "${draftOrderId}", tag: "${requestedShipping ? 'ShipRequested' : 'Placed'}", userId: "${userId}")
            }
        `;

        async function requestShipping(draftOrderId, userId, selectedAddress) {
            const mutation = `
                mutation {
                    requestShippingFee(
                        userId: "${userId}",
                        draftOrderId: "${draftOrderId}",
                        shippingAddress: {
                            address1: "${selectedAddress.address1}",
                            city: "${selectedAddress.city}",
                            province: "${selectedAddress.province}",
                            country: "${selectedAddress.country}",
                            zip: "${selectedAddress.zip}"
                        }
                    )
                }
            `;

            try {
                const response = await $.ajax({
                    url: "https://kseshopify-production.up.railway.app/graphql",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ query: mutation }),
                });

                if (response.data?.requestShippingFee) {
                    console.log("Shipping request sent successfully.");
                    return true;
                } else {
                    console.error("Failed to send shipping request email.", response.errors);
                    return false;
                }
            } catch (error) {
                console.error("Error sending shipping request:", error);
                return false;
            }
        }

        async function completeOrder(draftOrderId, userId, selectedAddress) {
            const mutation = `
                mutation {
                    requestShippingFee(
                        userId: "${userId}",
                        draftOrderId: "${draftOrderId}",
                        shippingAddress: {
                            address1: "${selectedAddress.address1}",
                            city: "${selectedAddress.city}",
                            province: "${selectedAddress.province}",
                            country: "${selectedAddress.country}",
                            zip: "${selectedAddress.zip}"
                        }
                    )
                }
            `;

            try {
                const response = await $.ajax({
                    url: "https://kseshopify-production.up.railway.app/graphql",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ query: mutation }),
                });
                console.log("Server Response:", response);

                if (response.data?.requestShippingFee) {
                    console.log("Order completed successfully.");
                    return true;
                } else {
                    console.error("Failed to complete the order:", response.errors || response.data);
                    return false;
                }
            } catch (error) {
                console.error("Error completing order (AJAX):", error);
                return false;
            }
        }

        function tagDraftOrder() {
            return $.ajax({
                url: 'https://kseshopify-production.up.railway.app/graphql',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ query: tagMutation }),
            });
        }

        tagDraftOrder()
            .done(async function (tagResponse) {
                console.log('Draft Order Tagging Response:', tagResponse);
                console.log("Selected Address:", selectedAddress);

                if (tagResponse.data?.createDraftOrderTag) {
                    if (requestedShipping) {
                        console.log("Shipping fee requested. Triggering requestShipping...");

                        const success = await requestShipping(draftOrderId, userId, selectedAddress);
                        if (success) {
                            spinnerContainer.style.display = 'none';
                            confirmationContent.innerHTML = `
                                <div><i class='bx bx-check-circle x-text-[#9E0B0F] x-text-[96px]'></i></div>
                                <div class="x-text-[32px] md:x-text-[36px]">SHIPPING FEE REQUESTED!</div>
                                <div>Thank you! Your shipping fee request has been received.</div>
                            `;
                        } else {
                            spinnerContainer.style.display = 'none';
                            confirmationContent.innerHTML = `
                                <div><i class='bx bx-error-circle x-text-[#951828] x-text-[96px]'></i></div>
                                <div class="x-text-[32px] md:x-text-[36px]">SHIPPING REQUEST FAILED!</div>
                                <div>Please try again later.</div>
                            `;
                        }
                    } else {
                        const orderCompleted = await completeOrder(draftOrderId, userId, selectedAddress);
                        if (orderCompleted) {
                            spinnerContainer.style.display = 'none';
                            confirmationContent.innerHTML = `
                                <div><i class='bx bx-check-circle x-text-[#9E0B0F] x-text-[96px]'></i></div>
                                <div class="x-text-[32px] md:x-text-[36px]">ORDER CONFIRMED!</div>
                                <div>
                                    Thank you for placing your order! We hope you enjoyed shopping with us. <br class="x-hidden md:x-block" />
                                    We have sent you a confirmation email.
                                </div>
                                <div class="x-font-semibold">
                                    Your order number is: <span id="order-number" class="x-text-[#9E0B0F]">${draftOrderId.split('/').pop()}</span>
                                </div>
                            `;
                        } else {
                            spinnerContainer.style.display = 'none';
                            confirmationContent.innerHTML = `
                                <div><i class='bx bx-error-circle x-text-[#951828] x-text-[96px]'></i></div>
                                <div class="x-text-[32px] md:x-text-[36px]">ORDER COMPLETION FAILED!</div>
                                <div>Please try again later.</div>
                            `;
                        }
                    }

                    confirmationContent.style.display = 'block';
                    actionButton.style.display = 'inline-block';
                    actionButton.href = "/account?view=saved";
                    actionButton.textContent = "View Saved Orders";
                }
            })
            .fail(function (error) {
                console.error('Error tagging draft order:', error.responseJSON || error);
                spinnerContainer.style.display = 'none';
                confirmationContent.innerHTML = `<div class="x-text-[#951828]">Failed to process the draft order. Please try again later.</div>`;
                actionButton.style.display = 'inline-block';
                actionButton.href = "/account?view=saved";
                actionButton.textContent = "Back to Saved Orders";
            });
    } else {
        console.error('No draftOrderId found in URL parameters.');
        alert('No draft order ID provided. Please try again.');
    }
});
</script>
